{"version":3,"sources":["webpack:///./src/app/reset/reset-routing.module.ts","webpack:///./src/app/reset/reset.component.css","webpack:///./src/app/reset/reset.component.html","webpack:///./src/app/reset/reset.component.ts","webpack:///./src/app/reset/reset.module.ts","webpack:///./src/app/shared/service/auth/auth.service.ts"],"names":[],"mappings":"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","file":"reset-reset-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ResetComponent } from './reset.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ResetComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ResetRoutingModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav  class=\\\"navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light\\\" style=\\\"position: absolute\\\" id=\\\"ftco-navbar\\\">\\n    \\n    <img class=\\\"mr-2\\\" src=\\\"assets\\\\image\\\\LogoBS.png\\\" >\\n    <a class=\\\"navbar-brand\\\"  routerLink=\\\"\\\"  href=\\\"#\\\">BarberPro</a>\\n     <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#ftco-nav\\\" aria-controls=\\\"ftco-nav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"ftco-nav\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\"><a routerLink=\\\"\\\" class=\\\"nav-link\\\" href=\\\"#\\\">{{ 'NAV.HOME' | translate }}</a></li>\\n          <li class=\\\"nav-item active\\\"> <a routerLink=\\\"/app\\\" class=\\\"nav-link\\\" href=\\\"#\\\">{{ 'NAV.SERVICESSCHED' | translate }}</a></li>\\n          <li class=\\\"nav-item\\\"><a routerLink=\\\"/login\\\" class=\\\"nav-link\\\" href=\\\"#\\\">{{ 'NAV.LOGIN' | translate }}</a></li>\\n       </ul>\\n    </div>\\n\\n</nav>\\n\\n\\n\\n<div class=\\\"hero-wrap\\\" style=\\\"background-image: url('assets/image/b1.jpg');\\\" data-stellar-background-ratio=\\\"0.5\\\">\\n  <div class=\\\"overlay\\\"></div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row no-gutters slider-text align-items-center justify-content-center\\\"  data-scrollax-parent=\\\"true\\\">\\n\\n      <div class=\\\"col-md-6 mt-5 text-center \\\" data-scrollax=\\\" properties: { translateY: '70%' }\\\">\\n\\n        <div class=\\\"card  mt-5\\\">\\n          <div class=\\\"card-header\\\" style=\\\"background-color: white; border-bottom-color: white\\\">\\n            <img class=\\\"mt-3 thumbnail rounded-circle img-thumbnail\\\" src=\\\"assets/image/dog2.jpg\\\">\\n          </div>\\n\\n          <h4 class=\\\"card-title\\\" style=\\\"color: #ce9c6b\\\">{{ 'RESET.TITLERESET' | translate }}</h4>\\n          <div class=\\\"card-body\\\">\\n\\n\\n            <form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n              <div class=\\\"row mb-2\\\"  [ngClass]=\\\"aplicaCssErro('email')\\\">\\n                <input class=\\\"mx-2 form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"{{ 'LOGIN.EMAIL' | translate }}\\\">\\n                <app-error-msg [control]=\\\"formulario.get('email')\\\" label=\\\"{{ 'LOGIN.EMAIL' | translate }}\\\"></app-error-msg>\\n                <!--Mensagem de erro de validaÃ§ao assyncrona-->\\n                <!--app-campo-control-erro [mostrarErro]=\\\"formulario.get('email').status === 'PENDING'\\\" msgErro=\\\"Validating email...\\\"></app-campo-control-erro>\\n                <app-campo-control-erro [mostrarErro]=\\\"formulario.get('email').status === 'VALID'\\\" msgErro=\\\"Valid email\\\"></app-campo-control-erro>\\n                <app-campo-control-erro [mostrarErro]=\\\"formulario.get('email').hasError('emailInvalido')\\\" msgErro=\\\"Email in use!\\\"></app-campo-control-erro-->\\n              </div>\\n\\n              <!--div class=\\\"row mb-2\\\"  [ngClass]=\\\"aplicaCssErro('password')\\\">\\n                <input class=\\\"mx-2 form-control\\\" formControlName=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <app-error-msg [control]=\\\"formulario.get('password')\\\" label=\\\"Password\\\"></app-error-msg>\\n              </div-->\\n\\n              \\n              <button class=\\\"btn btn-primary mb-3\\\" type=\\\"submit\\\">{{ 'RESET.BUTTONRESET' | translate }}</button>\\n            </form>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { UsuarioService } from '../shared/service/usuario/usuario.service';\nimport { AuthService } from '../shared/service/auth/auth.service';\n\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n\n  formulario: FormGroup;\n  browserLg: string;\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private usuarioService: UsuarioService,\n    private router: Router,\n    private toastr: ToastrService,\n    private translate: TranslateService\n  ) {\n    this.translate.addLangs(['de', 'en', 'es', 'fr', 'it', 'pt']);\n    this.translate.setDefaultLang('en');\n    const browserLang = this.translate.getBrowserLang();\n    this.translate.use(browserLang.match(/de|en|es|fr|it|pt/) ? browserLang : 'en');\n    this.browserLg = browserLang;\n   }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.email]]\n    });\n  }\n\n\n  onSubmit() {\n\n    if (this.formulario.valid) {\n\n      this.authService.resetPassword(this.formulario)\n        .then((user: any) => {\n          this.router.navigate(['/login']);\n          this.toastRedefSenha();\n        })\n        .catch((error: any) => {\n          this.toastError();\n        });\n\n    } else {\n      this.verificaValidacoesForm(this.formulario);\n    }\n\n\n  }\n\n\n  verificaValidacoesForm(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(campo => {\n      // console.log(campo);\n      const controle = formGroup.get(campo);\n      controle.markAsDirty();\n      controle.markAsUntouched();\n\n      if (controle instanceof FormGroup) {\n        this.verificaValidacoesForm(controle);\n      }\n    });\n  }\n\n\n\n  aplicaCssErro(campo: string) {\n    return {\n      'has-error': this.verificaValidTouched(campo),\n      'has-feedback': this.verificaValidTouched(campo),\n    };\n  }\n\n\n\n  verificaValidTouched(campo: string) {\n    return !this.formulario.get(campo).valid &&\n      (this.formulario.get(campo).touched || this.formulario.get(campo).dirty);\n  }\n\n\n  toastError() {\n    if (this.browserLg === 'de') {\n      this.toastr.error('E-Mail-Adresse falsch!');\n    }\n\n    if (this.browserLg === 'en') {\n      this.toastr.error('Email address incorrect!');\n    }\n\n    if (this.browserLg === 'es') {\n      this.toastr.error('DirecciÃ³n de correo electrÃ³nico incorrecta!');\n    }\n\n    if (this.browserLg === 'fr') {\n      this.toastr.error('Adresse email incorrecte!');\n    }\n\n    if (this.browserLg === 'it') {\n      this.toastr.error('Indirizzo email errato!');\n    }\n\n\n    if (this.browserLg === 'pt') {\n      this.toastr.error('EndereÃ§o de email incorreto!');\n    }\n\n  }\n\n\n  toastRedefSenha() {\n    if (this.browserLg === 'de') {\n      this.toastr.success('Eine E-Mail zum ZurÃ¼cksetzen des Passworts wurde gesendet.');\n    }\n\n    if (this.browserLg === 'en') {\n      this.toastr.success('A password reset email has been sent.');\n    }\n\n    if (this.browserLg === 'es') {\n      this.toastr.success('Se ha enviado un correo electrÃ³nico para restablecer la contraseÃ±a.');\n    }\n\n    if (this.browserLg === 'fr') {\n      this.toastr.success('Un email de rÃ©initialisation de mot de passe a Ã©tÃ© envoyÃ©.');\n    }\n\n    if (this.browserLg === 'it') {\n      this.toastr.success('Ã stata inviata un\\'email di reimpostazione della password.');\n    }\n\n\n    if (this.browserLg === 'pt') {\n      this.toastr.success('Um e-mail de redefiniÃ§Ã£o de senha foi enviado.');\n    }\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ResetComponent } from './reset.component';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ResetRoutingModule } from './reset-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TranslateModule,\n    ResetRoutingModule\n  ],\n  declarations: [ResetComponent]\n})\nexport class ResetModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\n\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n\n  private readonly API = `${environment.API}`;\n\n  constructor(\n    private httpClient: HttpClient,\n    private angularFireAuth: AngularFireAuth,\n    private db: AngularFireDatabase\n  ) { }\n\n  // Login email-senha\n  createUser(userForm: FormGroup) {\n    return this.angularFireAuth.auth.createUserWithEmailAndPassword(\n      userForm.get('email').value,\n      userForm.get('password').value\n    );\n  }\n\n\n  signIn(userForm: FormGroup) {\n    return this.angularFireAuth.auth.signInWithEmailAndPassword(\n      userForm.get('email').value,\n      userForm.get('password').value\n    );\n  }\n\n\n\n  resetPassword(userForm: FormGroup) {\n    return this.angularFireAuth.auth.sendPasswordResetEmail(userForm.get('email').value);\n  }\n\n\n  signOutFirebase() {\n    return this.angularFireAuth.auth.signOut();\n  }\n\n}\n"],"sourceRoot":""}