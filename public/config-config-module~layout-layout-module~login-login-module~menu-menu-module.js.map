{"version":3,"sources":["webpack:///./src/app/shared/service/auth/auth.service.ts","webpack:///./src/app/shared/service/user/user.service.ts"],"names":[],"mappings":"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","file":"config-config-module~layout-layout-module~login-login-module~menu-menu-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\n\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n\n  private readonly API = `${environment.API}`;\n\n  constructor(\n    private httpClient: HttpClient,\n    private angularFireAuth: AngularFireAuth,\n    private db: AngularFireDatabase\n  ) { }\n\n  // Login email-senha\n  createUser(userForm: FormGroup) {\n    return this.angularFireAuth.auth.createUserWithEmailAndPassword(\n      userForm.get('email').value,\n      userForm.get('password').value\n    );\n  }\n\n\n  signIn(userForm: FormGroup) {\n    return this.angularFireAuth.auth.signInWithEmailAndPassword(\n      userForm.get('email').value,\n      userForm.get('password').value\n    );\n  }\n\n\n\n  resetPassword(userForm: FormGroup) {\n    return this.angularFireAuth.auth.sendPasswordResetEmail(userForm.get('email').value);\n  }\n\n\n  signOutFirebase() {\n    return this.angularFireAuth.auth.signOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { RequestOptions, RequestMethod, Headers, Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\nimport { User } from './user.model';\nimport { ILocalizar } from './localizar.model';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly API = `${environment.API}userconfig`;\n  private PATH = 'userconfig/';\n  private readonly Keybing = 'Am06s4u9v3iDlgSdztJsrlkC-fFQg8LlFcSfqNc5hFxodfxnxqApuwEqKVH5vp-i';\n\n\n\n  constructor(\n    private httpclient: HttpClient,\n    private http: Http,\n    private router: Router,\n    private db: AngularFireDatabase\n  ) {\n  }\n\n\n  postUsuario(formulario: FormGroup) {\n\n    return new Promise((resolve) => {\n\n      this.db.object(this.PATH + formulario.get('fk').value)\n        .set({\n          fk: formulario.get('fk').value,\n          id: formulario.get('id').value,\n          lat: formulario.get('lat').value,\n          long: formulario.get('long').value,\n          txt_NomeSalao: formulario.get('txt_NomeSalao').value,\n          txt_NomeResp: formulario.get('txt_NomeResp').value,\n\n          txt_pais: formulario.get('txt_pais').value,\n          txt_End: formulario.get('txt_End').value,\n          txt_CEP: formulario.get('txt_CEP').value,\n          txt_Cidade: formulario.get('txt_Cidade').value,\n          txt_UF: formulario.get('txt_UF').value,\n          txt_Numero: formulario.get('txt_Numero').value,\n\n          txt_Cel: formulario.get('txt_Cel').value,\n          txt_Tel: formulario.get('txt_Tel').value,\n          txt_email: formulario.get('txt_email').value,\n          url: formulario.get('url').value,\n          urlLogo: formulario.get('urlLogo').value\n        })\n        .then(() => resolve());\n    });\n    /*\n    const body = JSON.stringify(formulario.value);\n    const headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    const requestOptions = new RequestOptions({ method: RequestMethod.Post, headers: headerOptions });\n    return this.http.post(this.API, body, requestOptions).pipe(map(x => x.json())); */\n  }\n\n\n\n  putUsuario(formulario: FormGroup) {\n    return new Promise((resolve, reject) => {\n\n      this.db.object(this.PATH + formulario.get('fk').value)\n        .update({\n          lat: formulario.get('lat').value,\n          long: formulario.get('long').value,\n          txt_NomeSalao: formulario.get('txt_NomeSalao').value,\n          txt_NomeResp: formulario.get('txt_NomeResp').value,\n\n          txt_pais: formulario.get('txt_pais').value,\n          txt_End: formulario.get('txt_End').value,\n          txt_CEP: formulario.get('txt_CEP').value,\n          txt_Cidade: formulario.get('txt_Cidade').value,\n          txt_UF: formulario.get('txt_UF').value,\n          txt_Numero: formulario.get('txt_Numero').value,\n\n          txt_Cel: formulario.get('txt_Cel').value,\n          txt_Tel: formulario.get('txt_Tel').value,\n          txt_email: formulario.get('txt_email').value,\n          url: formulario.get('url').value,\n          urlLogo: formulario.get('urlLogo').value\n        })\n        .then(() => resolve())\n        .catch((e) => reject(e));\n    });\n\n    /*\n    const body = JSON.stringify(formulario.value);\n    const headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    const requestOptions = new RequestOptions({ method: RequestMethod.Put, headers: headerOptions });\n    return this.http.put(this.API + '/' + id, body, requestOptions).pipe(map(x => x.json())); */\n  }\n\n\n  buscarPorCodigo(key: string) {\n\n    // this.db.object<CalendarEvent[]>(this.PATH + codigo).valueChanges().subscribe(console.log);\n    return this.db.object<User[]>(this.PATH + key).valueChanges();\n  }\n\n\n/*\n  buscarPorCodigo(codigo: number): Promise<User> {\n    return this.http.get(`${this.API}/${codigo}`)\n      .toPromise()\n      .then(response => {\n        const usuario = response.json() as User;\n        return usuario;\n      });\n  }\n*/\n\n\n\nputImage(url1: string, formulario: FormGroup) {\n  return new Promise((resolve, reject) => {\n\n    this.db.object(this.PATH + formulario.get('fk').value)\n      .update({\n        lat: formulario.get('lat').value,\n        long: formulario.get('long').value,\n        txt_NomeSalao: formulario.get('txt_NomeSalao').value,\n        txt_NomeResp: formulario.get('txt_NomeResp').value,\n\n        txt_pais: formulario.get('txt_pais').value,\n        txt_End: formulario.get('txt_End').value,\n        txt_CEP: formulario.get('txt_CEP').value,\n        txt_Cidade: formulario.get('txt_Cidade').value,\n        txt_UF: formulario.get('txt_UF').value,\n        txt_Numero: formulario.get('txt_Numero').value,\n\n        txt_Cel: formulario.get('txt_Cel').value,\n        txt_Tel: formulario.get('txt_Tel').value,\n        txt_email: formulario.get('txt_email').value,\n        url: url1,\n        urlLogo: formulario.get('urlLogo').value\n      })\n      .then(() => resolve())\n      .catch((e) => reject(e));\n  });\n\n}\n\n\nputImageLogo(url1: string, formulario: FormGroup) {\n  return new Promise((resolve, reject) => {\n\n    this.db.object(this.PATH + formulario.get('fk').value)\n      .update({\n        lat: formulario.get('lat').value,\n        long: formulario.get('long').value,\n        txt_NomeSalao: formulario.get('txt_NomeSalao').value,\n        txt_NomeResp: formulario.get('txt_NomeResp').value,\n\n        txt_pais: formulario.get('txt_pais').value,\n        txt_End: formulario.get('txt_End').value,\n        txt_CEP: formulario.get('txt_CEP').value,\n        txt_Cidade: formulario.get('txt_Cidade').value,\n        txt_UF: formulario.get('txt_UF').value,\n        txt_Numero: formulario.get('txt_Numero').value,\n\n        txt_Cel: formulario.get('txt_Cel').value,\n        txt_Tel: formulario.get('txt_Tel').value,\n        txt_email: formulario.get('txt_email').value,\n        url: formulario.get('url').value,\n        urlLogo:  url1\n      })\n      .then(() => resolve())\n      .catch((e) => reject(e));\n  });\n\n}\n\n\n\n  getListaLocalizacao(formulario: FormGroup): Promise<ILocalizar> {\n\n    return this.http.get(\n      'https://dev.virtualearth.net/REST/v1/Locations/' +\n      `${(formulario.get('txt_pais').value).trim()}/` +\n      `${(formulario.get('txt_UF').value).trim()}/` +\n      `${(formulario.get('txt_CEP').value).trim()}/` +\n      `${(formulario.get('txt_Cidade').value).trim()}/` +\n      `${(formulario.get('txt_NomeResp').value).trim()}/` +\n      `${(formulario.get('txt_End').value).trim()}/` +\n      `${(formulario.get('txt_Numero').value).trim()}/` +\n      '1%20Microsoft%20Way?o=json&key=' +\n      this.Keybing\n    )\n      .toPromise()\n      .then(response => {\n        const dados = response.json() as ILocalizar;\n        return dados;\n      });\n  }\n\n\n  getPaises() {\n    return this.http.get('assets/dados/paises.json')\n      .pipe(map((res: Response) => res.json()));\n  }\n\n\n  delUser (user: string) {\n    return this.db.object(this.PATH + user ).remove();\n  }\n\n\n  atualizarOneSignal (user: string, oneSignal: string) {\n    return this.db.object(`/precos/${user}/array/0`).update({ userIdOneSignalSalao: oneSignal});\n  }\n}\n"],"sourceRoot":""}